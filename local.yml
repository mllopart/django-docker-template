version: '2'

volumes:
  postgres_data_dev: {}
  postgres_backup_dev: {}

services:

  nginx:
    container_name: nginx
    build:
      context: .
      dockerfile: ./compose/nginx/Dockerfile-dev
    ports:
      - "8000:8000"
    volumes:
      - .:/src
      - ./staticfiles:/static
    depends_on:
      - django

  postgres:
    container_name: postgres
    build: ./compose/postgres
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data
      - postgres_backup_dev:/backups
    env_file: .env
    ports:
      - "5432:5432"

  postgres-admin:
    container_name: postgres-admin
    build: ./compose/postgres-admin
    env_file: .env
    ports:
      - "12345:80"
    links:
      - postgres
    depends_on:
      - postgres

  django:
    container_name: django
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-dev
    command: /gunicorn_dev.sh
    depends_on:
      - postgres
      - mailhog
      # - nodejs
      - redis
    links:
      - redis
      - postgres
    env_file: .env
    volumes:
      - .:/app
      - ./staticfiles:/static
    #ports:
    #  - "8000:8000"
    expose:
      - "8000"

  celery:
    container_name: celery
    build:
      context: .
      dockerfile: ./compose/django/Dockerfile-Celery-dev
    command: celery -A bookmarkspace worker -l info
    volumes:
      - .:/app
    links:
      - postgres
      - redis
    depends_on:
      - postgres
      - redis
    env_file: .env

  mailhog:
    container_name: mailhog
    image: mailhog/mailhog:v1.0.0
    ports:
      - "8025:8025"

  # nodejs:
  #   build:
  #     context: .
  #     dockerfile: ./compose/nodejs/Dockerfile-dev
  #   env_file: .env
  #   volumes:
  #     - ./nodejs/bookmark-scrap:/usr/src/app
  #     - /usr/src/app/node_modules
  #   ports:
  #     - "3000:3000"
  #   links:
  #     - mongodb

  # mongodb:
  #   build:
  #     context: .
  #     dockerfile: ./compose/mongo/Dockerfile
  #   env_file: .env
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - /Users/mllopart/data/mongodb:/data/db
  #   command:
  #     - --storageEngine=wiredTiger

  # mongo-express:
  #   image: mongo-express
  #   ports:
  #       - "8081:8081"
  #   links:
  #     - mongodb
  #   depends_on:
  #       - mongodb
  #   env_file: .env

  redis:
    container_name: redis
    image: redis:3.0
    ports:
      - "6379:6379"
